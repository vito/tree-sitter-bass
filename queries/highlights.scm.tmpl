; GENERATED VIA https://github.com/vito/tree-sitter-bass

(comment) @comment.line

["(" ")" "[" "]" "{" "}"] @punctuation.bracket

[(ignore) (null)] @constant.builtin

(bool) @constant.builtin.boolean

(int) @{{hl "constant.numeric.integer" "number" "constant.numeric.integer"}}

(string (string_escape) @{{hl "constant.character.escape" "string.escape" "constant.character.escape"}})

(string) @string
(path) @string.special.path
(keyword) @string.special.symbol

(command) @namespace

{{- define "generic"}}
; first symbol in a list form is a combiner call
(list . (symbol) @function)

(subpath (slash) @function)

; highlight symbols as vars only when they're clearly vars
(cons (symbol) @variable)
(scope (symbol) @variable)
(path form: (symbol) @variable)
(symbind form: (symbol) @variable)
{{- end -}}

{{- define "overrides"}}
;; classification based highlighting
{{range .Classes}}
(list . (symbol) {{.}})
(cons . (symbol) {{.}})
{{end}}

;; special cases

; [a & b] highlights & as operator rather than a regular symbol
(list (symbol) @operator (#match? @operator "&"))
(cons (symbol) @operator (#match? @operator "&"))

; (-> x y z) highlights first x as var, y z as function
(list
  .
  (symbol) @function.macro
  (#eq? @function.macro "->")
  .
  (symbol) @variable.parameter
  (symbol) @function)

; (-> 42 x y) highlights 42 as regular number
(list
  .
  (symbol) @function.macro
  (#eq? @function.macro "->")
  .
  (_)
  (symbol) @function)
{{- end}}

{{if .IsNeovim}}
;;; generic queries first
{{template "generic"}}

;;; specific queries supercede generic ones
{{template "overrides" .}}
{{else}}
;;; specific queries take precedence
{{template "overrides" .}}

;;; generic highlight rules
{{template "generic"}}
{{end -}}
